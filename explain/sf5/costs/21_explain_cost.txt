 Sort  (cost=883184.79..883184.79 rows=1 width=34)
   ->  GroupAggregate  (cost=883184.76..883184.78 rows=1 width=34)
         ->  Sort  (cost=883184.76..883184.76 rows=1 width=26)
               ->  Nested Loop  (cost=2551.74..883184.75 rows=1 width=26)
                     ->  Nested Loop Semi Join  (cost=2551.31..883184.23 rows=1 width=42)
                           ->  Gather  (cost=2550.87..883181.99 rows=1 width=42)
                                 ->  Nested Loop Anti Join  (cost=1550.87..882181.89 rows=1 width=42)
                                       ->  Parallel Hash Join  (cost=1550.43..781795.84 rows=165714 width=42)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..763644.92 rows=4166958 width=16)
                                             ->  Parallel Hash  (cost=1535.73..1535.73 rows=1176 width=30)
                                                   ->  Hash Join  (cost=1.32..1535.73 rows=1176 width=30)
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..1444.12 rows=29412 width=38)
                                                         ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.44..2.41 rows=25 width=16)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.44..2.22 rows=76 width=16)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.52 rows=1 width=4)

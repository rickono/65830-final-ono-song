explain -- $ID$
-- TPC-H/TPC-R Important Stock Identification Query (Q11)
-- Functional Query Definition
-- Approved February 1998
select
	ps_partkey,
	sum(ps_supplycost * ps_availqty) as value
from
	partsupp,
	supplier,
	nation
where
	ps_suppkey = s_suppkey
	and s_nationkey = n_nationkey
	and n_name = 'GERMANY'
group by
	ps_partkey having
		sum(ps_supplycost * ps_availqty) > (
			select
				sum(ps_supplycost * ps_availqty) * 0.0001
			from
				partsupp,
				supplier,
				nation
			where
				ps_suppkey = s_suppkey
				and s_nationkey = n_nationkey
				and n_name = 'GERMANY'
		)
order by
	value desc;
                                                            QUERY PLAN                                                            
----------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=57800.12..57933.45 rows=53330 width=40)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=15291.79..15291.81 rows=1 width=32)
           ->  Gather  (cost=15291.68..15291.79 rows=1 width=32)
                 Workers Planned: 1
                 ->  Partial Aggregate  (cost=14291.68..14291.69 rows=1 width=32)
                       ->  Nested Loop  (cost=1.75..13585.83 rows=94112 width=10)
                             ->  Hash Join  (cost=1.32..1535.73 rows=1176 width=4)
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   ->  Parallel Seq Scan on supplier supplier_1  (cost=0.00..1444.12 rows=29412 width=12)
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                                         ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)
                                               Filter: (n_name = 'GERMANY'::bpchar)
                             ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.44 rows=81 width=18)
                                   Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  HashAggregate  (cost=34046.44..38321.20 rows=53330 width=40)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Planned Partitions: 4
         ->  Nested Loop  (cost=24.22..21747.14 rows=159991 width=18)
               ->  Nested Loop  (cost=23.79..1253.77 rows=2000 width=4)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'GERMANY'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=23.79..1232.45 rows=2000 width=12)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..23.29 rows=2000 width=0)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.44 rows=81 width=26)
                     Index Cond: (ps_suppkey = supplier.s_suppkey)
(30 rows)


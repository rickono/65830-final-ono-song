explain analyze -- $ID$
-- TPC-H/TPC-R National Market Share Query (Q8)
-- Functional Query Definition
-- Approved February 1998
select
	o_year,
	sum(case
		when nation = 'BRAZIL' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'AMERICA'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'ECONOMY ANODIZED STEEL'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=394337.57..395155.10 rows=2406 width=64) (actual time=4716.016..4741.947 rows=2 loops=1)
   Group Key: (EXTRACT(year FROM orders.o_orderdate))
   ->  Gather Merge  (cost=394337.57..395046.83 rows=4812 width=96) (actual time=4715.430..4741.936 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=393337.54..393491.38 rows=2406 width=96) (actual time=4711.703..4712.227 rows=2 loops=3)
               Group Key: (EXTRACT(year FROM orders.o_orderdate))
               ->  Sort  (cost=393337.54..393349.96 rows=4966 width=70) (actual time=4711.198..4711.292 rows=4066 loops=3)
                     Sort Key: (EXTRACT(year FROM orders.o_orderdate))
                     Sort Method: quicksort  Memory: 381kB
                     Worker 0:  Sort Method: quicksort  Memory: 381kB
                     Worker 1:  Sort Method: quicksort  Memory: 481kB
                     ->  Hash Join  (cost=5.66..393032.68 rows=4966 width=70) (actual time=5.122..4709.843 rows=4066 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=4.09..393003.46 rows=4966 width=24) (actual time=5.069..4707.872 rows=4066 loops=3)
                                 ->  Hash Join  (cost=3.80..391475.56 rows=4966 width=24) (actual time=4.968..4688.168 rows=4066 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=1.29..391330.28 rows=24830 width=32) (actual time=1.946..4684.623 rows=20770 loops=3)
                                             ->  Nested Loop  (cost=0.87..379435.33 rows=24830 width=32) (actual time=1.745..4377.549 rows=20770 loops=3)
                                                   ->  Nested Loop  (cost=0.44..340052.31 rows=82711 width=28) (actual time=0.629..3651.863 rows=68589 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..25690.33 rows=2757 width=4) (actual time=0.328..296.431 rows=2293 loops=3)
                                                               Filter: ((p_type)::text = 'ECONOMY ANODIZED STEEL'::text)
                                                               Rows Removed by Filter: 331041
                                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.44..113.70 rows=32 width=36) (actual time=0.134..1.459 rows=30 loops=6878)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.48 rows=1 width=16) (actual time=0.010..0.010 rows=0 loops=205767)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.48 rows=1 width=12) (actual time=0.015..0.015 rows=1 loops=62310)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.45..2.45 rows=5 width=4) (actual time=0.034..0.035 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.45 rows=5 width=4) (actual time=0.030..0.033 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=12) (actual time=0.002..0.003 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.017..0.018 rows=1 loops=3)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.31 rows=1 width=12) (actual time=0.005..0.005 rows=1 loops=12198)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.024..0.025 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.018..0.020 rows=25 loops=3)
 Planning Time: 7.060 ms
 Execution Time: 4742.059 ms
(48 rows)


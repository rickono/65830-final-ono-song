explain -- $ID$
-- TPC-H/TPC-R Potential Part Promotion Query (Q20)
-- Function Query Definition
-- Approved February 1998
select
	s_name,
	s_address
from
	supplier,
	nation
where
	s_suppkey in (
		select
			ps_suppkey
		from
			partsupp
		where
			ps_partkey in (
				select
					p_partkey
				from
					part
				where
					p_name like 'forest%'
			)
			and ps_availqty > (
				select
					0.5 * sum(l_quantity)
				from
					lineitem
				where
					l_partkey = ps_partkey
					and l_suppkey = ps_suppkey
					and l_shipdate >= date '1994-01-01'
					and l_shipdate < date '1994-01-01' + interval '1' year
			)
	)
	and s_nationkey = n_nationkey
	and n_name = 'CANADA'
order by
	s_name;
                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop Semi Join  (cost=4199.79..2888751.56 rows=1077 width=51)
   ->  Gather Merge  (cost=4198.93..4654.81 rows=4000 width=55)
         Workers Planned: 1
         ->  Sort  (cost=3198.92..3204.80 rows=2353 width=55)
               Sort Key: supplier.s_name
               ->  Hash Join  (cost=1.32..3067.15 rows=2353 width=55)
                     Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                     ->  Parallel Seq Scan on supplier  (cost=0.00..2885.24 rows=58824 width=63)
                     ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                 Filter: (n_name = 'CANADA'::bpchar)
   ->  Nested Loop  (cost=0.86..721.01 rows=1 width=8)
         ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..707.05 rows=27 width=16)
               Index Cond: (ps_suppkey = supplier.s_suppkey)
               Filter: ((ps_availqty)::numeric > (SubPlan 1))
               SubPlan 1
                 ->  Aggregate  (cost=8.59..8.61 rows=1 width=32)
                       ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..8.59 rows=1 width=5)
                             Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                             Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
         ->  Index Scan using part_pkey on part  (cost=0.43..0.52 rows=1 width=4)
               Index Cond: (p_partkey = partsupp.ps_partkey)
               Filter: ((p_name)::text ~~ 'forest%'::text)
(23 rows)


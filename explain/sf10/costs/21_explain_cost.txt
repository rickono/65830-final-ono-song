 Sort  (cost=1905027.47..1905027.47 rows=1 width=34)
   ->  GroupAggregate  (cost=1905027.44..1905027.46 rows=1 width=34)
         ->  Sort  (cost=1905027.44..1905027.44 rows=1 width=26)
               ->  Nested Loop  (cost=4098.13..1905027.43 rows=1 width=26)
                     ->  Nested Loop Semi Join  (cost=4097.69..1905023.20 rows=1 width=42)
                           ->  Gather  (cost=4097.13..1905011.95 rows=1 width=42)
                                 ->  Nested Loop Anti Join  (cost=3097.13..1904011.85 rows=1 width=42)
                                       ->  Parallel Hash Join  (cost=3096.56..1563155.57 rows=333260 width=42)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..1526855.46 rows=8331505 width=16)
                                             ->  Parallel Hash  (cost=3067.15..3067.15 rows=2353 width=30)
                                                   ->  Hash Join  (cost=1.32..3067.15 rows=2353 width=30)
                                                         ->  Parallel Seq Scan on supplier  (cost=0.00..2885.24 rows=58824 width=38)
                                                         ->  Hash  (cost=1.31..1.31 rows=1 width=4)
                                                               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..11.60 rows=49 width=16)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..11.23 rows=148 width=16)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..4.23 rows=1 width=4)

 Sort  (cost=355265.82..355265.83 rows=1 width=34)
   ->  GroupAggregate  (cost=355265.79..355265.81 rows=1 width=34)
         ->  Sort  (cost=355265.79..355265.80 rows=1 width=26)
               ->  Nested Loop  (cost=1514.57..355265.78 rows=1 width=26)
                     ->  Nested Loop Semi Join  (cost=1514.14..355265.27 rows=1 width=42)
                           ->  Gather  (cost=1513.70..355263.91 rows=1 width=42)
                                 ->  Nested Loop Anti Join  (cost=513.70..354263.81 rows=1 width=42)
                                       ->  Hash Join  (cost=513.27..312823.59 rows=66598 width=42)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..305395.23 rows=1666433 width=16)
                                             ->  Hash  (cost=503.27..503.27 rows=800 width=30)
                                                   ->  Nested Loop  (cost=10.49..503.27 rows=800 width=30)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                                                         ->  Bitmap Heap Scan on supplier  (cost=10.49..493.95 rows=800 width=38)
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..10.29 rows=800 width=0)
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.43..1.42 rows=11 width=16)
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.43..1.34 rows=32 width=16)
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..0.51 rows=1 width=4)

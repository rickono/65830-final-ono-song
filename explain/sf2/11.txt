explain -- $ID$
-- TPC-H/TPC-R Important Stock Identification Query (Q11)
-- Functional Query Definition
-- Approved February 1998
select
	ps_partkey,
	sum(ps_supplycost * ps_availqty) as value
from
	partsupp,
	supplier,
	nation
where
	ps_suppkey = s_suppkey
	and s_nationkey = n_nationkey
	and n_name = 'GERMANY'
group by
	ps_partkey having
		sum(ps_supplycost * ps_availqty) > (
			select
				sum(ps_supplycost * ps_availqty) * 0.0001
			from
				partsupp,
				supplier,
				nation
			where
				ps_suppkey = s_suppkey
				and s_nationkey = n_nationkey
				and n_name = 'GERMANY'
		)
order by
	value desc;
                                                      QUERY PLAN                                                      
----------------------------------------------------------------------------------------------------------------------
 Sort  (cost=20975.00..21028.33 rows=21330 width=40)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=9160.73..9160.74 rows=1 width=32)
           ->  Nested Loop  (cost=10.91..8680.79 rows=63991 width=10)
                 ->  Nested Loop  (cost=10.49..503.27 rows=800 width=4)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4)
                             Filter: (n_name = 'GERMANY'::bpchar)
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=10.49..493.95 rows=800 width=12)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..10.29 rows=800 width=0)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.42 rows=80 width=18)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  HashAggregate  (cost=9320.70..10280.57 rows=21330 width=40)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         ->  Nested Loop  (cost=10.91..8680.79 rows=63991 width=18)
               ->  Nested Loop  (cost=10.49..503.27 rows=800 width=4)
                     ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4)
                           Filter: (n_name = 'GERMANY'::bpchar)
                     ->  Bitmap Heap Scan on supplier  (cost=10.49..493.95 rows=800 width=12)
                           Recheck Cond: (s_nationkey = nation.n_nationkey)
                           ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..10.29 rows=800 width=0)
                                 Index Cond: (s_nationkey = nation.n_nationkey)
               ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.42 rows=80 width=26)
                     Index Cond: (ps_suppkey = supplier.s_suppkey)
(27 rows)

